---
name: Build and push autodocking utils

env:
    DOCKING_REPO: firesimulations/utils_docking
    DOCKING_VERSION: 2023.1.2
    DOCKING_IMAGE_VER: 3.11-slim-bullseye

    DOCKING_GPU_REPO: firesimulations/utils_docking_gpu
    DOCKING_GPU_VERSION: 2023.1.1
    DOCKING_GPU_IMAGE_VER: 2020.06

    DOCKING_MASTER_REPO: firesimulations/utils_docking_master
    DOCKING_MASTER_VERSION: 2023.1.1
    DOCKING_MASTER_IMAGE_VER: 2020.06

    RX_DOCKING_CONDA_REPO: firesimulations/utils_rxdock
    RX_DOCKING_CONDA_VERSION: 2023.1.1-conda
    RX_DOCKING_CONDA_IMAGE_VER: 22.11.1-alpine

    RX_DOCKING_REPO: firesimulations/utils_rxdock
    RX_DOCKING_VERSION: 2023.1.1
    RX_DOCKING_IMAGE_VER: lunar-20230731

on:
    push:
        branches:
            - "docker"

jobs:
    check-for-existing-docking-image:
        runs-on: ubuntu-latest
        name: Check docker for docking tag
        outputs:
            tag-exists: ${{steps.check-docker.outputs.tag-exists}}
        steps:
            - name: Check Docker for Tag
              id: check-docker
              uses: hipcamp/docker-tag-exists@v1
              with:
                  image: ${{env.DOCKING_REPO}}
                  tag: ${{env.DOCKING_VERSION}}
    docking-docker:
        runs-on: ubuntu-latest
        name: Build and deploy docking image
        needs: check-for-existing-docking-image
        if: needs.check-for-existing-docking-image.outputs.tag-exists != 'true'
        steps:
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{secrets.DOCKERHUB_USERNAME}}
                  password: ${{secrets.DOCKERHUB_TOKEN}}
            - name: Build and push
              uses: docker/build-push-action@v3
              with:
                  context: "{{defaultContext}}:utils_docking"
                  file: "Dockerfile"
                  push: true
                  tags: ${{env.DOCKING_REPO}}:${{env.DOCKING_VERSION}},${{env.DOCKING_REPO}}:latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
              env:
                  VERSION: ${{env.DOCKING_VERSION}}
                  IMAGE_VER: ${{env.DOCKING_IMAGE_VER}}

    check-for-existing-docking-gpu-image:
        runs-on: ubuntu-latest
        name: Check docker for docking gpu tag
        outputs:
            tag-exists: ${{steps.check-docker.outputs.tag-exists}}
        steps:
            - name: Check Docker for Tag
              id: check-docker
              uses: hipcamp/docker-tag-exists@v1
              with:
                  image: ${{env.DOCKING_GPU_REPO}}
                  tag: ${{env.DOCKING_GPU_VERSION}}
    docking-gpu-docker:
        runs-on: ubuntu-latest
        name: Build and deploy docking image
        needs: check-for-existing-docking-gpu-image
        if: needs.check-for-existing-docking-gpu-image.outputs.tag-exists != 'true'
        steps:
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{secrets.DOCKERHUB_USERNAME}}
                  password: ${{secrets.DOCKERHUB_TOKEN}}
            - name: Build and push
              uses: docker/build-push-action@v3
              with:
                  context: "{{defaultContext}}:utils_docking_gpu"
                  file: "Dockerfile"
                  push: true
                  tags: ${{env.DOCKING_GPU_REPO}}:${{env.DOCKING_GPU_VERSION}},${{env.DOCKING_GPU_REPO}}:latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
              env:
                  VERSION: ${{env.DOCKING_GPU_VERSION}}
                  IMAGE_VER: ${{env.DOCKING_GPU_IMAGE_VER}}

    check-for-existing-docking-master-image:
        runs-on: ubuntu-latest
        name: Check docker for docking master tag
        outputs:
            tag-exists: ${{steps.check-docker.outputs.tag-exists}}
        steps:
            - name: Check Docker for Tag
              id: check-docker
              uses: hipcamp/docker-tag-exists@v1
              with:
                  image: ${{env.DOCKING_MASTER_REPO}}
                  tag: ${{env.DOCKING_MASTER_VERSION}}
    docking-master-docker:
        runs-on: ubuntu-latest
        name: Build and deploy docking image
        needs: check-for-existing-docking-master-image
        if: needs.check-for-existing-docking-master-image.outputs.tag-exists != 'true'
        steps:
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{secrets.DOCKERHUB_USERNAME}}
                  password: ${{secrets.DOCKERHUB_TOKEN}}
            - name: Build and push
              uses: docker/build-push-action@v3
              with:
                  context: "{{defaultContext}}:utils_docking_gpu"
                  file: "Dockerfile.master"
                  push: true
                  tags: ${{env.DOCKING_MASTER_REPO}}:${{env.DOCKING_MASTER_VERSION}},${{env.DOCKING_MASTER_REPO}}:latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
              env:
                  VERSION: ${{env.DOCKING_MASTER_VERSION}}
                  IMAGE_VER: ${{env.DOCKING_MASTER_IMAGE_VER}}

    check-for-existing-rxdock-conda-image:
        runs-on: ubuntu-latest
        name: Check docker for docking tag
        outputs:
            tag-exists: ${{steps.check-docker.outputs.tag-exists}}
        steps:
            - name: Check Docker for Tag
              id: check-docker
              uses: hipcamp/docker-tag-exists@v1
              with:
                  image: ${{env.RX_DOCKING_CONDA_REPO}}
                  tag: ${{env.RX_DOCKING_CONDA_VERSION}}
    rxdock-conda-docker:
        runs-on: ubuntu-latest
        name: Build and deploy rxdock conda image
        needs: check-for-existing-rxdock-conda-image
        if: needs.check-for-existing-rxdock-conda-image.outputs.tag-exists != 'true'
        steps:
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{secrets.DOCKERHUB_USERNAME}}
                  password: ${{secrets.DOCKERHUB_TOKEN}}
            - name: Build and push
              uses: docker/build-push-action@v3
              with:
                  context: "{{defaultContext}}:utils_rxdock"
                  file: "Dockerfile.conda"
                  push: true
                  tags: ${{env.RX_DOCKING_CONDA_REPO}}:${{env.RX_DOCKING_CONDA_VERSION}},${{env.RX_DOCKING_CONDA_REPO}}:latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
              env:
                  VERSION: ${{env.RX_DOCKING_CONDA_VERSION}}
                  IMAGE_VER: ${{env.RX_DOCKING_CONDA_IMAGE_VER}}
